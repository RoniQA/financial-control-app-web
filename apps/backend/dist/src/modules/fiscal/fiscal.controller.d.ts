import { FiscalService } from './fiscal.service';
import { CreateNfeDto } from './dto/create-nfe.dto';
export declare class FiscalController {
    private readonly fiscalService;
    constructor(fiscalService: FiscalService);
    createNfe(createNfeDto: CreateNfeDto): Promise<{
        number: string;
        error: string | null;
        id: string;
        status: string;
        createdAt: Date;
        updatedAt: Date;
        companyId: string;
        series: string;
        key: string;
        xmlContent: string | null;
        danfeUrl: string | null;
        protocol: string | null;
        sentAt: Date | null;
        authorizedAt: Date | null;
        cancelledAt: Date | null;
    }>;
    findAllNfe(filters: any): Promise<{
        number: string;
        error: string | null;
        id: string;
        status: string;
        createdAt: Date;
        updatedAt: Date;
        companyId: string;
        series: string;
        key: string;
        xmlContent: string | null;
        danfeUrl: string | null;
        protocol: string | null;
        sentAt: Date | null;
        authorizedAt: Date | null;
        cancelledAt: Date | null;
    }[]>;
    findNfeById(id: string): Promise<{
        number: string;
        error: string | null;
        id: string;
        status: string;
        createdAt: Date;
        updatedAt: Date;
        companyId: string;
        series: string;
        key: string;
        xmlContent: string | null;
        danfeUrl: string | null;
        protocol: string | null;
        sentAt: Date | null;
        authorizedAt: Date | null;
        cancelledAt: Date | null;
    }>;
    updateNfeStatus(id: string, status: string, xmlContent?: string, protocol?: string): Promise<{
        number: string;
        error: string | null;
        id: string;
        status: string;
        createdAt: Date;
        updatedAt: Date;
        companyId: string;
        series: string;
        key: string;
        xmlContent: string | null;
        danfeUrl: string | null;
        protocol: string | null;
        sentAt: Date | null;
        authorizedAt: Date | null;
        cancelledAt: Date | null;
    }>;
    createNfse(createNfseDto: any): Promise<{
        number: string;
        error: string | null;
        id: string;
        status: string;
        createdAt: Date;
        updatedAt: Date;
        companyId: string;
        xmlContent: string | null;
        protocol: string | null;
        sentAt: Date | null;
        authorizedAt: Date | null;
        cancelledAt: Date | null;
        pdfUrl: string | null;
    }>;
    createNfce(createNfceDto: any): Promise<{
        number: string;
        error: string | null;
        id: string;
        status: string;
        createdAt: Date;
        updatedAt: Date;
        companyId: string;
        series: string;
        key: string;
        xmlContent: string | null;
        protocol: string | null;
        sentAt: Date | null;
        authorizedAt: Date | null;
        cancelledAt: Date | null;
        danfceUrl: string | null;
    }>;
}
