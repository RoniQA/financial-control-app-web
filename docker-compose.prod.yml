version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: nova-agro-postgres-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: nova_agro_prod
      POSTGRES_USER: nova_agro_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-nova_agro_secure_password_2024}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backup:/backup
    ports:
      - "5432:5432"
    networks:
      - nova-agro-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nova_agro_user -d nova_agro_prod"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: nova-agro-redis-prod
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-nova_agro_redis_secure_2024}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - nova-agro-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: nova-agro-minio-prod
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-nova_agro_admin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-nova_agro_minio_secure_2024}
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - nova-agro-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile.prod
    container_name: nova-agro-backend-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://nova_agro_user:${POSTGRES_PASSWORD:-nova_agro_secure_password_2024}@postgres:5432/nova_agro_prod
      REDIS_URL: redis://:${REDIS_PASSWORD:-nova_agro_redis_secure_2024}@redis:6379
      JWT_SECRET: ${JWT_SECRET:-nova_agro_jwt_super_secure_secret_2024}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-nova_agro_refresh_super_secure_secret_2024}
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER:-nova_agro_admin}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD:-nova_agro_minio_secure_2024}
      MINIO_USE_SSL: false
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - nova-agro-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile.prod
    container_name: nova-agro-frontend-prod
    restart: unless-stopped
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3001/api}
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - nova-agro-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nova-agro-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - nova-agro-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  nova-agro-network:
    driver: bridge
